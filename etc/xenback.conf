#!/usr/bin/perl
#########################################
# CONFIGURATION FILE
#########################################
# The configuration is parsed in order:
#
# +xenbackup.conf
#  |
#  +--job.conf
#
# So in your job files you can vary only the selection ov VMs and/or backup media path
# and leave global configuration as is.
# However you can change any parameter in job files also.

use vars qw(%config);

%config = (

# fake execution - only logging commands, set "false" for real work
 fake => false,

#Descriptive name
 host => "VMHost01",


######################
# Backup Media Related
######################
#Directory to backup to, this should be nfs share or something large. (add / at the end)
 backupdir => "/mnt/backup/",

#check Avaiable space if true check available space on the folder and quit if not greater than spacerequired
 checkspace => true,

#minimum space required in MB
 spacerequired => 5000,

#Automount if set to true script try to mount the backupdir at start and umount at end else no action taken and u have to mount dir
 Automount => false,

#MountCommand is the command used to mount the directory
 MountCommand => "mount -t cifs //192.168.25.16/backup/immagine " . \$config{backupdir} . " -o guest",

#UMountCommand is the command used to umount the directory
 UMountCommand => "umount " . \$config{backupdir},


#Try to Detach/Attach removable device before the backup - device type for remove
 removable => ['iso','udev'],

#use snapshot
#if true script try to make snaphost of the virtual machine else if false
#shutdown the machine export and power on the machine
# if check - try to make snapshot, when error - make export
 useSnap => true,

#quiesce snapshot
#if true try to make quiesce snapshot (Ony for Windows VM, Xenserver VSS provider must be installed)
 usequiesce => false,


#Set to true to create a subfolder in the store for each backup based on vm name
 subfolder => true,

#Set to true to let the script manage to delete the backup older than a certain day or number or hours
 versioning => true,

#Number of days,number,hours used to delete backup's file
 delnumber => 5,

#Method to delete the file based on days,number etc etc possible option atm are days,numbers,hours
 delmethod => "days",


#####################
# NOTIFICATION SETUP
#####################

#mail notification setup
#false for no notification
#mail notification now use ssmtp already installed in xenserver
#just configure your /etc/ssmtp/ssmtp.conf
#and uncomment the line FromLineOverride=>YES
 mailNotification => true,

# Append log to the mail
 appendLog => true,

#mail to
 MailTo => "backupadmin\@example.com",

#mail from
 MailFrom => "vmhost01\@example.com",


#####################
#COMPRESSION OPTIONS
#####################

#compress option enable/disable compression
#
# true - use compression via compresscmd
# false - don't compression
# internal - use compression via internal 'xe' mechanisms
#  recomended for external backup store and XenServer 6.0 and higher
#
 compress => internal,

#compress command
 compresscmd => "tar -czvf",

#compress extension easiser for me to put correct extension
 compressext => ".tar.gz",


###################
# LOGGING OPTIONS 
###################

 LOG_CONF => q/
  log4perl.category = INFO, Logfile
#, Screen
#  log4perl.category = DEBUG, Logfile, Screen
  log4perl.appender.Logfile          = Log::Dispatch::FileRotate
  log4perl.appender.Logfile.filename = \/var\/log\/xenback.log
  log4perl.appender.Logfile.mode     = append
  log4perl.appender.Logfile.max      = 2
  log4perl.appender.Logfile.size     = 1_000_000
  log4perl.appender.Logfile.layout   = Log::Log4perl::Layout::PatternLayout
  log4perl.appender.Logfile.layout.ConversionPattern = %d %p: %m%n
  log4perl.appender.Screen           = Log::Log4perl::Appender::Screen
  log4perl.appender.Screen.layout    = Log::Log4perl::Layout::PatternLayout
  log4perl.appender.Screen.layout.ConversionPattern  = %d %p: %m%n
/,


);
